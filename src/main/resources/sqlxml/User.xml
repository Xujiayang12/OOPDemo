<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">

    <resultMap type="info.User" id="UserResult">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="classroom" jdbcType="VARCHAR" property="classroom"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="admin" jdbcType="INTEGER" property="admin"/>
        <result column="project" jdbcType="INTEGER" property="project"/>
        <result column="self_score" jdbcType="INTEGER" property="self_score"/>
        <result column="teacher_score" jdbcType="INTEGER" property="teacher_score"/>
    </resultMap>

    <select id="loginCheck" parameterType="info.User" resultMap="UserResult">
    SELECT * FROM user WHERE account = #{account:VARCHAR} AND password = #{password:VARCHAR}
  </select>

    <select id="isAccountExist" parameterType="info.User" resultMap="UserResult">
    SELECT * FROM user WHERE account = #{account:VARCHAR}
  </select>

    <select id="findAll" parameterType="info.User"  resultMap="UserResult">
    SELECT * FROM user
  </select>

    <select id="findById" parameterType="int" resultMap="UserResult">
    SELECT * FROM user where id = #{id:INTEGER}
  </select>

    <select id="findByAccount" parameterType="String" resultMap="UserResult">
    SELECT * FROM user where account = #{account:VARCHAR}
  </select>

    <select id="findByProject" parameterType="int" resultMap="UserResult">
    SELECT * FROM user where project = #{project:INTEGER}
  </select>

    <select id="findByClass" parameterType="String" resultMap="UserResult">
    SELECT * FROM user where classroom = #{classroom:VARCHAR} ORDER BY account ASC ;
  </select>

    <insert id="signUp" parameterType="info.User">
    INSERT INTO user (account, name, password, classroom, qq, phone, admin, project,self_score,teacher_score) VALUES (#{account},#{name},#{password},#{classroom},#{qq},#{phone},0,0,0,0)
  </insert>

    <insert id="adminAdd" parameterType="info.User">
    INSERT INTO user (account, name, password, classroom, qq, phone, admin, project,self_score,teacher_score) VALUES (#{account},#{name},#{password},#{classroom},#{qq},#{phone},#{admin},0,0,0)
  </insert>

    <delete id="deleteById" parameterType="int">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <delete id="deleteByAccount" parameterType="String" >
        DELETE FROM user WHERE account = #{account}
    </delete>

    <update id="updateById" parameterType="info.User">
        UPDATE user set name = #{name},password = #{password},classroom = #{classroom},qq = #{qq},phone = #{phone},admin = #{admin},project = #{project} where id = #{id};
    </update>

    <update id="updateProject" parameterType="info.User">
        UPDATE user set project = #{project} where id = #{id};
    </update>

    <update id="updateByAccount" parameterType="info.User">
        UPDATE user set name = #{name},password = #{password},classroom = #{classroom},qq = #{qq},phone = #{phone},admin = #{admin},project = #{project} where account = #{account};
    </update>

    <update id="setSelfScore" parameterType="info.User">
        UPDATE user set self_score = #{self_score} where id = #{id};
    </update>

    <update id="setTeacherScore" parameterType="info.User">
        UPDATE user set teacher_score = #{teacher_score} where id = #{id};
    </update>

</mapper>
